<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longjun.cto.framework.sm.sys.mapper.AuthResourcesMapper">

	<insert id="saveModel" parameterType="com.longjun.cto.framework.sm.sys.entity.model.AuthResourcesModel"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `t_auth_resource` 
			(  `dom_id`,`dom_name`,`cls`,`target`, `name`, `url`, `type`, `parent_id`, `permission`,`sort`,`status`) 
			VALUES 
			( #{domId}, #{domName},#{cls},#{target}, #{name}, #{url}, #{type}, #{parentId},#{permission},#{sort}, #{status});
	</insert>
	 
	<select id="getById" parameterType="java.lang.Object" 
		resultType="com.longjun.cto.framework.sm.sys.entity.view.AuthResourcesView">
		SELECT
			t.`id` as id, 
			t.`time` as time,
			t.`cls` as cls,
			t.`dom_id` as domId,
			t.`dom_name` as domName,
			t.`target` as target,
			t.`name` as name,
			t.`url` as url,
			t.`type` as type,
			t.`parent_id` as parentId,
			t.`permission` as permission,
			t.`sort` as sort,
			t.`status` as status
		FROM
			t_auth_resource AS t
			where 1 = 1 
			and t.id = #{id}
	</select>
	
	<update id="del" parameterType="java.lang.Object">
		update t_auth_resource set status = 0
		where id = #{id}
	</update>
	
	<update id="setResInfo" parameterType="com.longjun.cto.framework.sm.sys.entity.model.AuthResourcesModel">
		update t_auth_resource set 
		<if test="name != null">
			name = #{name},
		</if>
		<if test="url != null">
			url = #{url},
		</if>
		<if test="type != null">
			type = #{type},
		</if>
		<if test="parentId != null">
			parent_id = #{parentId},
		</if>
		<if test="permission != null">
			permission = #{permission},
		</if>
		<if test="sort != null">
			sort = #{sort},
		</if>
		
		lastupdate = now()
		where id = #{id}
	</update>
	
	
	<select id="getByPage" parameterType="com.longjun.cto.framework.sm.sys.entity.dto.AuthResourcesDto" 
		resultType="com.longjun.cto.framework.sm.sys.entity.view.AuthResourcesView">
		SELECT
			t.`id` as id, 
			t.`time` as time,
			t.`dom_id` as domId,
			t.`dom_name` as domName,
			t.`cls` as cls,
			t.`target` as target,
			t.`name` as name,
			t.`url` as url,
			t.`type` as type,
			t.`parent_id` as parentId,
			t.`permission` as permission,
			t.`sort` as sort,
			t.`status` as status
		FROM
			t_auth_resource AS t
			where 1 = 1 
	</select>
	
	<select id="listTopByAdminId" parameterType="java.lang.Object" 
		resultType="com.longjun.cto.framework.sm.sys.entity.view.AuthResourcesView">
		SELECT
			tar.id AS id,
			tar.cls,
			tar.dom_id AS domId,
			tar.dom_name AS domName,
			tar.target,
			tar.`name`,
			tar.url,
			tar.`type`,
			tar.parent_id AS parentId,
			tar.permission,
			tar.sort,
			tar.topmenuid,
			tar.icon,
			tar.`time`,
			tar.lastupdate,
			tar.`status`
		FROM
			t_auth_role_resource AS t
		LEFT JOIN t_auth_role AS ar ON t.role_id = ar.use_id
		LEFT JOIN t_auth_resource AS tar ON t.resources_id = tar.id
		LEFT JOIN t_admin AS a ON  a.id=#{admin_id}
		WHERE
			1 = 1
		and t.role_id in
				(
					 select role_id from t_admin_role where admin_id=#{admin_id} and STATUS = 1
				)
			
		AND tar.parent_id = #{parent_id} 
		AND tar.is_show = 1
		AND tar.type = 1
		AND tar.`status`=1
		GROUP BY tar.id
		ORDER BY
			tar.sort ASC
				
	</select>
	
	
	
	<resultMap id="showMenuMap" type="com.longjun.cto.framework.sm.sys.entity.view.ShowMenuView">
        <result property="id"       column="id" />
        <result property="pid"      column="pid"/>
        <result property="title"    column="title"/>
        <result property="icon"     column="icon"/>
        <result property="href"     column="href"/>
        <collection property="children" select="selectShowMenuByUser"  column="{parentId = id,userId = myuserId}">
        </collection>
    </resultMap>

    <select id="selectShowMenuByUser" resultMap="showMenuMap" parameterType="java.util.Map">
        SELECT
        distinct  m.id        as "id",
        m.parent_id as "pid",
        m.name      as "title",
        m.icon      as "icon",
        m.url      as "href",
        m.sort,
        #{userId}   as "myuserId"
        FROM
        (select * from t_auth_resource where status = 1 ) m
        LEFT JOIN t_auth_role_resource srm on srm.resources_id = m.id
        LEFT JOIN t_auth_roles r on r.id = srm.role_id
        LEFT JOIN t_admin_roles sur on sur.role_id = r.id
        LEFT JOIN t_admin u on u.id = sur.admin_id
        WHERE
        u.id = #{userId}
        <choose>
            <when test="parentId != null and parentId !='' ">
                and m.parent_id = #{parentId}
            </when>
            <otherwise>
                and m.parent_id = 0
            </otherwise>
        </choose>
        and r.status=1
        and m.is_show = 1
        order by m.sort desc
    </select>
	 
</mapper>